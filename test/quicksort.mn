Space

Comet partition(~[planet]Cluster A, planet low, planet high) -> planet  {
	planet aux1; planet aux2;
	planet pivote = ~A[high];
	print("pivote: "); print(pivote); print('\n');
	planet i = low-1;
	orbit j around range(low, high) {
		if (~A[j] < pivote) {
			i += 1;
			aux1 = ~A[i];
			aux2 = ~A[j];
			~A[i] = aux2;
			~A[j] = aux1;
		}
	}
	i += 1;
	aux1 = ~A[i];
	aux2 = ~A[high];
	~A[i] = aux2;
	~A[high] = aux1;
	print(~A); print('\n');
	return i
}

Comet quicksort(~[planet]Cluster A, planet low, planet high) -> vacuum  {
	if (low < high) {
        planet p = partition(A, low, high);
        quicksort(A, low, p - 1);
        quicksort(A, p + 1, high)
	}
	[planet]Cluster padding;
	return
}

~[planet]Cluster A = bigbang([planet]Cluster);
~A = {3,2,1,3,4,5,3};
quicksort(A,0,scale(~A)-1);
print(~A)

EndofSpace
"Esto es una amalgama monstruosa de todo lo que había en el readme"
"Solo sirve para probar el lexer, no tiene sentido sintácticamente"
"Aqui va algo para que de error"
?

Space
EndofSpace

Space

planet n = 5;
print(n)

EndofSpace

Space

moon b = full;
planet n = 10;
cloud x = 3.14159;
star a = 'z'

EndofSpace

Space

Constellation s = "osa mayor";
~planet x = bigbang(planet);
[star]Cluster A = ('a','b','c','d');
[planet]Quasar L = [1,2,3,4,5];
[planet]Nebula = {"Juan" : 25, "María" : 31, "Wilkerman" : 27}

EndofSpace

Space
Constellation s = "1";
Planet n = 1;
print(n+terraform(s));

Space

print("Introduzca un número");
Constellation input = read();
planet n = (planet) n;
print(2^n)

EndofSpace

Space

[planet]Cluster A = (0,1,2,3,4);
[planet]Cluster B = Cluster(5) of planet;
orbit i around range(0,5) {
  B[i] = i;
}

EndofSpace

Space

[planet]Quasar A = [0,1,2,3,4];
A.add(5)

EndofSpace

Space
[planet]Nebula N = {"perro" : 33, "gato" : 55};
N["vaca"] = 77
EndofSpace

Space
[planet]Quasar A = [51,0,1,2,3,4,79];
[planet]Quasar B = A[1..6]
EndofSpace

Space
[planet]Quasar A = [0,1,2,3,4];
planet x = scale(A)
EndofSpace

Space
~planet z = bigbang(scale(planet));
planet x = ~z;
EndofSpace

Space
Galaxy Perro{
    Constellation nombre;
    planet edad;
    Constellation raza
} firulais;
firulais.nombre = "Firulais";
firulais.edad = 9;
firulais.raza = "dálmata"
EndofSpace

Space
UFO numero { 
    planet int; 
    cloud float
};
UFO numero n;
n.int = 42;
n.float = 2.72
EndofSpace

Space
moon m = full;
if (m) {
    print("perro");
}
else if (1==1) {
    print("gato");
}
else {
    print("vaca");
}
unless (m) {
    print("sapo");
}
EndofSpace

Space
planet i = 0;
orbit while (i < 6) {
    print(i);
    i++
}

planet j = 0;
orbit until (j >= 6) {
    print(j);
    j++
}

orbit(planet k=0 ; k < 6 ; k++) {
    print(k)
}
EndofSpace

Space
[cloud]Quasar L = [0.1, 0.15, 0.2, 0.25, 0.3]
orbit i around L {
    print(i);
}
EndofSpace

Space
[[planet]Cluster]Cluster M = ((1,2,3),(4,5,6),(7,8,9));
orbit i around range(3) {
    orbit j around range(3) {
        if M[i][j] == 7 {
            print(i);
            print(j);
            break 2
        }
    }
}
EndofSpace

Space
Comet halley(planet n) -> blackhole {
    print("Este es un procedimiento");
    print(n);
}

Comet twice(planet n) -> planet {
    print("Esta es una Función");
    return 2*n;
}

(planet -> planet) Comet f = twice;
planet z = f(2);
EndofSpace

Comet double(planet @n) -> blackhole {
    n *= 2
}

Space
Satellite Primos() -> planet {
    [planet]Quasar L = [];
    planet p = 2;
    orbit while(full) {
        moon esprimo = full;
        orbit q around L {
            if (p%q == 0) {
                esprimo = new;
                break;
            }
        }
        if (esprimo) {
            yield p;
            L.add(p);
        }
        p++;
    }
}

[planet]Satelline generador_primos = Primos();
print("esto no va a parar jaja salu2");
orbit p around generador_primos {
    print(p);
}
EndofSpace

